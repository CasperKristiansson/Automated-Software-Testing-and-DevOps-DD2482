name: Deploy Terraform Configuration Dev

on:
  workflow_dispatch:
  push:
    branches:
      - '*'

jobs:
  terraform:
    name: Deploy Terraform
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: 'eu-north-1'
      AWS_PROFILE: Personal

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup AWS credentials
      run: |
        mkdir -p ~/.aws
        echo "[Personal]" > ~/.aws/credentials
        echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
        echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.2.0'

    - name: Terraform Init
      run: terraform init
      working-directory: ./Demo/terraform/environments/dev

    - name: Terraform Validate
      run: terraform validate
      working-directory: ./Demo/terraform/environments/dev

    - name: Terraform Plan
      run: terraform plan
      working-directory: ./Demo/terraform/environments/dev

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./Demo/terraform/environments/dev

  # deploy_serverless:
  #   name: Deploy Serverless Dev
  #   needs: setup
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Setup Node.js
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: '20'

  #   - name: Install Serverless CLI
  #     run: npm install -g serverless@3

  #   - name: Deploy Serverless Application
  #     run: serverless deploy --stage dev
  #     working-directory: ./Demo/api
